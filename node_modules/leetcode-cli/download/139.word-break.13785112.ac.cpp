/*
 * [139] Word Break
 *
 * https://leetcode.com/problems/word-break
 *
 * Medium (28.74%)
 * Total Accepted:    132018
 * Total Submissions: 459330
 * Testcase Example:  '"leetcode"\n["leet","code"]'
 *
 * 
 * Given a non-empty string s and a dictionary wordDict containing a list of
 * non-empty words, determine if s can be segmented into a space-separated
 * sequence of one or more dictionary words. You may assume the dictionary does
 * not contain duplicate words.
 * 
 * 
 * For example, given
 * s = "leetcode",
 * dict = ["leet", "code"].
 * 
 * 
 * 
 * Return true because "leetcode" can be segmented as "leet code".
 * 
 * 
 * 
 * UPDATE (2017/1/4):
 * The wordDict parameter had been changed to a list of strings (instead of a
 * set of strings). Please reload the code definition to get the latest
 * changes.
 * 
 */

class Solution {
public:
    bool wordBreak(string s, unordered_set<string> &dict) {
        if (s.empty()) return true;
        for (unordered_set<string>::iterator it = dict.begin();
             it != dict.end();
             ++it) {
            if (s.substr(0,it->size()) == *it) {
                string s1 = s.substr(it->size());
                map<string,bool>::iterator it = cache.find(s1);
                if (it != cache.end()) return it->second;
                bool res = wordBreak(s1, dict);
                cache[s1] = res;
                if (res) return true;
            }
        }
        return false;
    }
    map<string,bool> cache;
};

/*
 * [215] Kth Largest Element in an Array
 *
 * https://leetcode.com/problems/kth-largest-element-in-an-array
 *
 * Medium (38.09%)
 * Total Accepted:    114115
 * Total Submissions: 299545
 * Testcase Example:  '[1]\n1'
 *
 * Find the kth largest element in an unsorted array. Note that it is the kth
 * largest element in the sorted order, not the kth distinct element.
 * 
 * For example,
 * Given [3,2,1,5,6,4] and k = 2, return 5.
 * 
 * 
 * Note: 
 * You may assume k is always valid, 1 ≤ k ≤ array's length.
 * 
 * Credits:Special thanks to @mithmatt for adding this problem and creating all
 * test cases.
 */
class Solution {
public:
    int split(vector<int> &nums,int i, int j) {
        int x = nums[i], old = i;
        while (i<j) {
            while (j>i && nums[j] <= x) --j;
            nums[i] = nums[j];
            while (i<j && nums[i] > x) ++i;
            nums[j] = nums[i];
        }
        nums[i] = x;
        return i-old+1;
    }
    int findKthLargest(vector<int>& nums, int k) {
        int i = 0, j = nums.size()-1;
        while (k > 0) {
            int x = split(nums, i, j);
            //cout << "=>" << x << endl;
            //for (auto x : nums) cout << x << ",";
            //cout << endl;
            if (x == k) return nums[i+x-1];
            else if (x<k) {
                k-=x; i+=x;
            } else {
                j=i+x-1;
            }
        }
        return 0;
    }
};

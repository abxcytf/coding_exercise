/*
 * [40] Combination Sum II
 *
 * https://leetcode.com/problems/combination-sum-ii
 *
 * Medium (31.93%)
 * Total Accepted:    102684
 * Total Submissions: 321523
 * Testcase Example:  '[10,1,2,7,6,1,5]\n8'
 *
 * 
 * Given a collection of candidate numbers (C) and a target number (T), find
 * all unique combinations in C where the candidate numbers sums to T.
 * 
 * 
 * Each number in C may only be used once in the combination.
 * 
 * Note:
 * 
 * All numbers (including target) will be positive integers.
 * The solution set must not contain duplicate combinations.
 * 
 * 
 * 
 * 
 * For example, given candidate set [10, 1, 2, 7, 6, 1, 5] and target 8, 
 * A solution set is: 
 * 
 * [
 * [1, 7],
 * [1, 2, 5],
 * [2, 6],
 * [1, 1, 6]
 * ]
 * 
 * 
 */
class Solution {
public:
    typedef vector<int> V;
    typedef vector<V> VV;
    typedef multiset<int> S;
    typedef set<S> SS;
    void find(SS &ss, V& v, V &nums,int idx, int x) {
        if (x==0) {
            S s(v.begin(), v.end());
            ss.insert(s);
            return;
        }
        for (int i = idx; i < nums.size(); ++i) {
            if (x < nums[i]) continue;
            v.push_back(nums[i]);
            find(ss,v,nums,i+1,x-nums[i]);
            v.pop_back();
        }
    }
    VV combinationSum2(V &nums, int x) {
        VV vv; V v;
        SS ss; S s;
        find(ss, v, nums,0, x);
        for (SS::iterator it = ss.begin(); it != ss.end(); ++it) {
            vv.push_back(V((*it).begin(), (*it).end()));
        }
        return vv;
    }
};

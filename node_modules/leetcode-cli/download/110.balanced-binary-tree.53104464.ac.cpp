/*
 * [110] Balanced Binary Tree
 *
 * https://leetcode.com/problems/balanced-binary-tree
 *
 * Easy (36.50%)
 * Total Accepted:    158401
 * Total Submissions: 433943
 * Testcase Example:  '[]'
 *
 * Given a binary tree, determine if it is height-balanced.
 * 
 * 
 * 
 * For this problem, a height-balanced binary tree is defined as a binary tree
 * in which the depth of the two subtrees of every node never differ by more
 * than 1.
 * 
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    bool isBalanced(TreeNode* root) {
        return go(root) >= 0;
    }
    
    int go(TreeNode* p) {
        if (p==NULL) return 0;
        if (p->left==NULL && p->right==NULL) return 1;
        int h1 = go(p->left);
        int h2 = go(p->right);
        if (h1<0 || h2<0) return -1;
        if (abs(h1-h2)>1) return -1;
        return max(h1,h2)+1;
    }
};

/*
 * [117] Populating Next Right Pointers in Each Node II
 *
 * https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii
 *
 * Medium (33.59%)
 * Total Accepted:    86946
 * Total Submissions: 258821
 * Testcase Example:  '{}'
 *
 * Follow up for problem "Populating Next Right Pointers in Each Node".
 * What if the given tree could be any binary tree? Would your previous
 * solution still work?
 * 
 * Note:
 * You may only use constant extra space.
 * 
 * 
 * For example,
 * Given the following binary tree,
 * 
 * 1
 * /  \
 * 2    3
 * / \    \
 * 4   5    7
 * 
 * 
 * 
 * After calling your function, the tree should look like:
 * 
 * 1 -> NULL
 * /  \
 * 2 -> 3 -> NULL
 * / \    \
 * 4-> 5 -> 7 -> NULL
 * 
 * 
 */
/**
 * Definition for binary tree with next pointer.
 * struct TreeLinkNode {
 *  int val;
 *  TreeLinkNode *left, *right, *next;
 *  TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) {}
 * };
 */
class Solution {
public:
    void connect(TreeLinkNode *root) {
        go(root);
    }
    
    void go(TreeLinkNode *p) {
        if (p==NULL) return;
        TreeLinkNode *x = p, *cur, *last = NULL, *first = NULL;
        while (x!=NULL) {
            if (x->left != NULL) {
                cur = x->left;
                if (last!=NULL) { last->next=cur; }
                else { first=cur; }
                last=cur;
            }
            
            if (x->right!=NULL) {
                cur = x->right;
                if (last!=NULL) { last->next=cur; }
                else { first=cur; }
                last=cur;
            }
            x=x->next;
        }
        go(first);
    }
};

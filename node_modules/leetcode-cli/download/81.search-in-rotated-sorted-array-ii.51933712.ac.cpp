/*
 * [81] Search in Rotated Sorted Array II
 *
 * https://leetcode.com/problems/search-in-rotated-sorted-array-ii
 *
 * Medium (32.86%)
 * Total Accepted:    85756
 * Total Submissions: 260960
 * Testcase Example:  '[]\n5'
 *
 * 
 * Follow up for "Search in Rotated Sorted Array":
 * What if duplicates are allowed?
 * 
 * Would this affect the run-time complexity? How and why?
 * 
 * 
 * Suppose an array sorted in ascending order is rotated at some pivot unknown
 * to you beforehand.
 * 
 * (i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).
 * 
 * Write a function to determine if a given target is in the array.
 * 
 * The array may contain duplicates.
 */
class Solution {
public:
    bool search(vector<int>& A, int x) {
        int l = 0, h = A.size()-1,m;
        while (l<=h) {
            m=(l+h)/2;
            if (A[m]==x || A[l]==x || A[h]==x)
                return true;
            else if (A[m]>A[l]) {
                if (x>A[l] && x<A[m])
                    h=m-1;
                else
                    l=m+1;
            } else if (A[m]<A[l]) {
                if (x>A[m] && x<A[h])
                    l=m+1;
                else
                    h=m-1;
            } else {
                l=l+1;
            }
        }
        return false;
    }
};

#
# [127] Word Ladder
#
# https://leetcode.com/problems/word-ladder
#
# Medium (19.23%)
# Total Accepted:    112794
# Total Submissions: 586439
# Testcase Example:  '"hit"\n"cog"\n["hot","dot","dog","lot","log","cog"]'
#
# 
# Given two words (beginWord and endWord), and a dictionary's word list, find
# the length of shortest transformation sequence from beginWord to endWord,
# such that:
# 
# 
# Only one letter can be changed at a time.
# Each transformed word must exist in the word list. Note that beginWord is not
# a transformed word.
# 
# 
# 
# For example,
# 
# 
# Given:
# beginWord = "hit"
# endWord = "cog"
# wordList = ["hot","dot","dog","lot","log","cog"]
# 
# 
# As one shortest transformation is "hit" -> "hot" -> "dot" -> "dog" -> "cog",
# return its length 5.
# 
# 
# 
# Note:
# 
# Return 0 if there is no such transformation sequence.
# All words have the same length.
# All words contain only lowercase alphabetic characters.
# You may assume no duplicates in the word list.
# You may assume beginWord and endWord are non-empty and are not the same.
# 
# 
# 
# 
# UPDATE (2017/1/20):
# The wordList parameter had been changed to a list of strings (instead of a
# set of strings). Please reload the code definition to get the latest changes.
# 
#
def cango(s1,s2):
    n = 0
    for i in range(len(s1)):
        if s1[i] != s2[i]:
            n += 1
    return n == 1

class Solution:
    def ladderLength(self, start, end, s):
        if len(s)==0:
            return 0

        xx = [start]
        n = 0
        while len(xx) > 0:
            n += 1
            vv = list()
            for x in xx:
                if cango(x,end):
                    return n+1
                ss = set()
                for y in s:
                    if x==y:
                        continue
                    if cango(x,y):
                        vv.append(y)
                    else:
                        ss.add(y)
                s = ss
            xx = vv
        return 0

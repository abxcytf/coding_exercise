/*
 * [31] Next Permutation
 *
 * https://leetcode.com/problems/next-permutation
 *
 * Medium (28.33%)
 * Total Accepted:    99300
 * Total Submissions: 350468
 * Testcase Example:  '[1]'
 *
 * 
 * Implement next permutation, which rearranges numbers into the
 * lexicographically next greater permutation of numbers.
 * 
 * 
 * If such arrangement is not possible, it must rearrange it as the lowest
 * possible order (ie, sorted in ascending order).
 * 
 * 
 * The replacement must be in-place, do not allocate extra memory.
 * 
 * 
 * Here are some examples. Inputs are in the left-hand column and its
 * corresponding outputs are in the right-hand column.
 * 1,2,3 &#8594; 1,3,2
 * 3,2,1 &#8594; 1,2,3
 * 1,1,5 &#8594; 1,5,1
 * 
 */
class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        int n = nums.size(), j = n-1;
        while (j>0 && nums[j]<=nums[j-1]) --j;
        if (j>0) {
            int i = j;
            while (i<n-1 && nums[j-1]<nums[i]) ++i;
            if (nums[i]<=nums[j-1]) --i;
            swap(nums[i],nums[j-1]);
        }
        sort(nums.begin()+j, nums.end());
    }
};

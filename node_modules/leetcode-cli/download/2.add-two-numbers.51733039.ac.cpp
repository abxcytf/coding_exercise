/*
 * [2] Add Two Numbers
 *
 * https://leetcode.com/problems/add-two-numbers
 *
 * Medium (26.78%)
 * Total Accepted:    253942
 * Total Submissions: 948099
 * Testcase Example:  '[2,4,3]\n[5,6,4]'
 *
 * You are given two non-empty linked lists representing two non-negative
 * integers. The digits are stored in reverse order and each of their nodes
 * contain a single digit. Add the two numbers and return it as a linked list.
 * 
 * You may assume the two numbers do not contain any leading zero, except the
 * number 0 itself.
 * 
 * 
 * Input: (2 -> 4 -> 3) + (5 -> 6 -> 4)
 * Output: 7 -> 0 -> 8
 */
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        static int x = 0;
        if (!l1 && !l2) {
            int last = x;
            x = 0;
            return last ? new ListNode(last) : NULL;
        }
        ListNode* node = new ListNode(x);
        if (!l1) node->val += l2->val;
        else if (!l2) node->val += l1->val;
        else node->val += (l1->val + l2->val);
        
        x = node->val / 10;
        node->val %= 10;
        node->next = addTwoNumbers(l1?l1->next:NULL, l2?l2->next:NULL);
        return node;
    }
};

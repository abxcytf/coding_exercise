/*
 * [143] Reorder List
 *
 * https://leetcode.com/problems/reorder-list
 *
 * Medium (24.85%)
 * Total Accepted:    85419
 * Total Submissions: 343733
 * Testcase Example:  '[]'
 *
 * 
 * Given a singly linked list L: L0→L1→…→Ln-1→Ln,
 * reorder it to: L0→Ln→L1→Ln-1→L2→Ln-2→…
 * 
 * 
 * You must do this in-place without altering the nodes' values.
 * 
 * 
 * For example,
 * Given {1,2,3,4}, reorder it to {1,4,2,3}.
 * 
 */
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    void reorderList(ListNode* head) {
        int n=0;
        ListNode *p=head, *p1, *p2, *t;
        while (p!=NULL) { p=p->next; ++n; }
        if (n<3) return;

        p1=head;
        for (int i=0; i<n/2; ++i) p1=p1->next;

        ListNode H(0); H.next=p1->next; p1->next=NULL;

        p=H.next;
        while (p!=NULL && p->next != NULL) {
            t=p->next; p->next=t->next; t->next=H.next; H.next=t;
        }

        p1=head; p2=H.next; H.next=NULL; p=&H;
        while (p1!=NULL || p2!=NULL) {
            if (p1!=NULL) {
                p->next=p1;p=p->next;
                p1=p1->next;
            }
            if (p2!=NULL) {
                p->next=p2;p=p->next;
                p2=p2->next;
            }
        }       
    }
};

#
# [120] Triangle
#
# https://leetcode.com/problems/triangle
#
# Medium (32.79%)
# Total Accepted:    95708
# Total Submissions: 291854
# Testcase Example:  '[[-10]]'
#
# Given a triangle, find the minimum path sum from top to bottom. Each step you
# may move to adjacent numbers on the row below.
# 
# 
# For example, given the following triangle
# 
# [
# [2],
# [3,4],
# [6,5,7],
# [4,1,8,3]
# ]
# 
# 
# 
# The minimum path sum from top to bottom is 11 (i.e., 2 + 3 + 5 + 1 = 11).
# 
# 
# 
# Note:
# Bonus point if you are able to do this using only O(n) extra space, where n
# is the total number of rows in the triangle.
# 
#
class Solution:
    # @param triangle, a list of lists of integers
    # @return an integer
    def minimumTotal(self, vv):
        n = len(vv)
        for x in range(n-2,-1,-1):
            for j in range(x+1):
                vv[x][j]+=min(vv[x+1][j],vv[x+1][j+1])
        return vv[0][0]

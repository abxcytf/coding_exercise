/*
 * [106] Construct Binary Tree from Inorder and Postorder Traversal
 *
 * https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal
 *
 * Medium (31.22%)
 * Total Accepted:    77244
 * Total Submissions: 247445
 * Testcase Example:  '[]\n[]'
 *
 * Given inorder and postorder traversal of a tree, construct the binary tree.
 * 
 * Note:
 * You may assume that duplicates do not exist in the tree.
 * 
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* buildTree(vector<int>& in, vector<int>& post) {
        return buildTree(&post[0], &post[0]+post.size(), &in[0], &in[0]+in.size());
    }
    
    TreeNode* buildTree(int* post_b, int* post_e, int* in_b, int* in_e) {
        if (post_b == post_e) return NULL;
        TreeNode* p = new TreeNode(post_e[-1]);
        int i = 0;
        while (in_b+i != in_e) {
            if (in_b[i]==post_e[-1]) break;
            ++i;
        }
        p->left = buildTree(post_b, post_b+i, in_b, in_b+i);
        p->right = buildTree(post_b+i, post_e-1, in_b+i+1, in_e);
        return p;
    }
};

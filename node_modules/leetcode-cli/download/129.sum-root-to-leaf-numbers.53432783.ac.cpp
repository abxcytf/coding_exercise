/*
 * [129] Sum Root to Leaf Numbers
 *
 * https://leetcode.com/problems/sum-root-to-leaf-numbers
 *
 * Medium (35.53%)
 * Total Accepted:    102596
 * Total Submissions: 288753
 * Testcase Example:  '[]'
 *
 * Given a binary tree containing digits from 0-9 only, each root-to-leaf path
 * could represent a number.
 * An example is the root-to-leaf path 1->2->3 which represents the number
 * 123.
 * 
 * Find the total sum of all root-to-leaf numbers.
 * 
 * For example,
 * 
 * 1
 * / \
 * 2   3
 * 
 * 
 * 
 * The root-to-leaf path 1->2 represents the number 12.
 * The root-to-leaf path 1->3 represents the number 13.
 * 
 * 
 * Return the sum = 12 + 13 = 25.
 * 
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int sum;
    int sumNumbers(TreeNode* root) {
        this->sum = 0;
        if (root==NULL) return 0;
        go(root, 0);
        return this->sum;
    }
    
    void go(TreeNode* p, int v) {
        if (p->left==NULL && p->right==NULL) {
            this->sum += v*10+p->val;
            return;
        }
        if (p->left != NULL) {
            go(p->left, v*10+p->val);
        }
        if (p->right != NULL) {
            go(p->right, v*10+p->val);
        }
    }
};

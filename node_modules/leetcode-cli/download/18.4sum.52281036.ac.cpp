/*
 * [18] 4Sum
 *
 * https://leetcode.com/problems/4sum
 *
 * Medium (25.95%)
 * Total Accepted:    106405
 * Total Submissions: 409946
 * Testcase Example:  '[1,0,-1,0,-2,2]\n0'
 *
 * Given an array S of n integers, are there elements a, b, c, and d in S such
 * that a + b + c + d = target? Find all unique quadruplets in the array which
 * gives the sum of target.
 * 
 * Note: The solution set must not contain duplicate quadruplets.
 * 
 * 
 * 
 * For example, given array S = [1, 0, -1, 0, -2, 2], and target = 0.
 * 
 * A solution set is:
 * [
 * [-1,  0, 0, 1],
 * [-2, -1, 1, 2],
 * [-2,  0, 0, 2]
 * ]
 * 
 */
class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> vv;
        int n = nums.size();
        if (n<4) return vv;
        
        sort(nums.begin(),nums.end());
        for (int i=0; i<n-3; ++i) {
            if (i>0 && nums[i]==nums[i-1]) continue;
            for (int i2=i+1; i2<n-2; ++i2) {
                if (i2>i+1 && nums[i2]==nums[i2-1]) continue; 
                int j=i2+1, k=n-1;
                while (j<k) {
                    int s = nums[i]+nums[i2]+nums[j]+nums[k];
                    if (s==target) {
                        vv.push_back({nums[i],nums[i2],nums[j],nums[k]});
                        while (j<k && nums[j]==nums[j+1]) ++j;
                        while (j<k && nums[k]==nums[k-1]) --k;
                        ++j;--k;
                    } else if (s>target) {
                        while (j<k && nums[k]==nums[k-1]) --k;
                        --k;
                    } else {
                        while (j<k && nums[j]==nums[j+1]) ++j;
                        ++j;
                    }
                }
            }
        }
        return vv;
    }
};

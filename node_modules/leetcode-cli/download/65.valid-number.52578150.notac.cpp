/*
 * [65] Valid Number
 *
 * https://leetcode.com/problems/valid-number
 *
 * Hard (12.66%)
 * Total Accepted:    62494
 * Total Submissions: 493741
 * Testcase Example:  '"3"'
 *
 * Validate if a given string is numeric.
 * 
 * 
 * Some examples:
 * "0" => true
 * "   0.1  " => true
 * "abc" => false
 * "1 a" => false
 * "2e10" => true
 * 
 * 
 * Note: It is intended for the problem statement to be ambiguous. You should
 * gather all requirements up front before implementing one.
 * 
 * 
 * 
 * Update (2015-02-10):
 * The signature of the C++ function had been updated. If you still see your
 * function signature accepts a const char * argument, please click the reload
 * button  to reset your code definition.
 * 
 */
class Solution {
public:
    bool isNumber(string s) {
        int n=s.size(),i=0;
        while (i<n && s[i]==' ') ++i;
        if (i==n) return false;
        while (n>=0 && s[n-1]==' ') --n;
        int first=i;
        bool hasdot=false, hase=false;
        for (;i<n; ++i) {
            if (s[i]>='0' && s[i]<='9') {
                continue;
            } else if (s[i]=='.') {
                if (hasdot) return false;
                if (i==first && i==n-1) return false;
                if (i>first && (s[i-1]<'0' || s[i-1]>'9')) return false;
                if (i<n-1 && (s[i+1]<'0' || s[i+1]>'9')) return false;
                hasdot=true;
            } else if (s[i]=='+' || s[i]=='-') {
                if (i==first) continue;
                if (s[i-1]=='e') continue;
                return false;
            } else if (s[i]=='e') {
                if (hase) return false;
                if (i==first) return false;
                if (s[i-1]<'0' || s[i-1]>'9') return false;
                if (i==n || (s[i+1]<'0' || s[i+1]>'9')) return false;
                hase=true;
            } else {
                return false;
            }
        }
        return true;
    }
};

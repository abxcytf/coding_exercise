#
# [52] N-Queens II
#
# https://leetcode.com/problems/n-queens-ii
#
# Hard (43.27%)
# Total Accepted:    58096
# Total Submissions: 134261
# Testcase Example:  '1'
#
# Follow up for N-Queens problem.
# 
# Now, instead outputting board configurations, return the total number of
# distinct solutions.
# 
# 
#
class Solution:
    # @return a list of lists of string
    def totalNQueens(self, n):
        self.num=0
        self.v = [0 for i in range(n)]
        self.find(0,n)
        return self.num

    def find(self,i,n):
        if i==n:
            self.num+=1
            return
        for x in range(n):
            ok=True
            for j in range(i):
                if x == self.v[j]:
                    ok=False
                    break
                if abs(x-self.v[j])==i-j:
                    ok=False
                    break
            if not ok: continue
            self.v[i] = x
            self.find(i+1,n)
        return

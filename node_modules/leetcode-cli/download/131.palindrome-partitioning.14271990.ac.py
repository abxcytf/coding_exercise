#
# [131] Palindrome Partitioning
#
# https://leetcode.com/problems/palindrome-partitioning
#
# Medium (31.41%)
# Total Accepted:    87699
# Total Submissions: 279197
# Testcase Example:  '"aab"'
#
# 
# Given a string s, partition s such that every substring of the partition is a
# palindrome.
# 
# 
# Return all possible palindrome partitioning of s.
# 
# 
# For example, given s = "aab",
# 
# Return
# 
# [
# ["aa","b"],
# ["a","a","b"]
# ]
# 
# 
#
class Solution:
    # @param s, a string
    # @return a list of lists of string
    def partition(self, s):
        xx = [[]]
        for i in range(len(s)):
            xx2 = []
            for x in xx:
                xx2.append(x+[s[i]])
                if len(x) > 1 and s[i] == x[-2]:
                    xx2.append(x[:-2] + [x[-2]+x[-1]+s[i]])
                if len(x) > 0 and s[i] == x[-1]:
                    xx2.append(x[:-1] + [x[-1]+s[i]])
            xx = xx2
        return xx

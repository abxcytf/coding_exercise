/*
 * [39] Combination Sum
 *
 * https://leetcode.com/problems/combination-sum
 *
 * Medium (36.54%)
 * Total Accepted:    141993
 * Total Submissions: 388593
 * Testcase Example:  '[2,3,6,7]\n7'
 *
 * 
 * Given a set of candidate numbers (C) (without duplicates) and a target
 * number (T), find all unique combinations in C where the candidate numbers
 * sums to T. 
 * 
 * 
 * The same repeated number may be chosen from C unlimited number of times.
 * 
 * 
 * Note:
 * 
 * All numbers (including target) will be positive integers.
 * The solution set must not contain duplicate combinations.
 * 
 * 
 * 
 * 
 * For example, given candidate set [2, 3, 6, 7] and target 7, 
 * A solution set is: 
 * 
 * [
 * [7],
 * [2, 2, 3]
 * ]
 * 
 * 
 */
class Solution {
public:
    typedef vector<int> V;
    typedef vector<V> VV;
    void find(VV &vv, V& v, V &nums, int x) {
        if (x==0) {
            vv.push_back(v);
            return;
        }
        for (int i = 0; i < nums.size(); ++i) {
            if (x < nums[i]) continue;
            if (!v.empty() && v.back() > nums[i]) continue;
            v.push_back(nums[i]);
            find(vv,v,nums,x-nums[i]);
            v.pop_back();
        }
    }
    VV combinationSum(V &nums, int x) {
        VV vv;
        V v;
        find(vv, v, nums, x);
        return vv;
    }
};

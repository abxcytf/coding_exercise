#
# [59] Spiral Matrix II
#
# https://leetcode.com/problems/spiral-matrix-ii
#
# Medium (38.37%)
# Total Accepted:    74015
# Total Submissions: 192881
# Testcase Example:  '0'
#
# Given an integer n, generate a square matrix filled with elements from 1 to
# n2 in spiral order.
# 
# 
# For example,
# Given n = 3,
# 
# You should return the following matrix:
# 
# [
# [ 1, 2, 3 ],
# [ 8, 9, 4 ],
# [ 7, 6, 5 ]
# ]
# 
#
class Solution:
    # @return a list of lists of integer
    def generateMatrix(self, n):
        vv=[[0 for i in range(n)] for j in range(n)]
        x=1;
        i_l = j_l = 0
        i_h = j_h = n-1
        i = j = 0
        while x<=n*n:
            while j <= j_h:
                if vv[i][j]==0:
                    vv[i][j] = x
                    x+=1
                    if x>n*n: break
                j+=1
            i_l+=1
            j-=1
            while i <= i_h:
                if vv[i][j]==0:
                    vv[i][j] = x
                    x+=1
                    if x>n*n: break
                i+=1
            j_h-=1
            i-=1
            while j >= j_l:
                if vv[i][j]==0:
                    vv[i][j] = x
                    x+=1
                    if x>n*n: break
                j-=1
            i_h-=1
            j+=1
            while i >= i_l:
                if vv[i][j]==0:
                    vv[i][j] = x
                    x+=1
                    if x>n*n: break
                i-=1
            j_l+=1
            i+=1
        return vv

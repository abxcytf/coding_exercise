/*
 * [82] Remove Duplicates from Sorted List II
 *
 * https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii
 *
 * Medium (28.84%)
 * Total Accepted:    99167
 * Total Submissions: 343921
 * Testcase Example:  '[]'
 *
 * 
 * Given a sorted linked list, delete all nodes that have duplicate numbers,
 * leaving only distinct numbers from the original list.
 * 
 * 
 * For example,
 * Given 1->2->3->3->4->4->5, return 1->2->5.
 * Given 1->1->1->2->3, return 2->3.
 * 
 */
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* deleteDuplicates(ListNode* head) {
        ListNode H(0); H.next=head;
        ListNode *last=&H, *p=head, *p2;
        while (p!=NULL && p->next!=NULL) {
            p2=p->next;
            while(p2!=NULL && p2->val==p->val) p2=p2->next;
            if (p2==p->next) {
                last=p;
            } else {
                last->next=p2;
            }
            p=p2;
        }
        return H.next;
    }
};

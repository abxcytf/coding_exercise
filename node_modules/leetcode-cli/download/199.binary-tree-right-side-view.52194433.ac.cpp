/*
 * [199] Binary Tree Right Side View
 *
 * https://leetcode.com/problems/binary-tree-right-side-view
 *
 * Medium (39.32%)
 * Total Accepted:    70979
 * Total Submissions: 180516
 * Testcase Example:  '[]'
 *
 * Given a binary tree, imagine yourself standing on the right side of it,
 * return the values of the nodes you can see ordered from top to bottom.
 * 
 * 
 * For example:
 * Given the following binary tree,
 * 
 * 1            <---
 * /   \
 * 2     3         <---
 * \     \
 * 5     4       <---
 * 
 * 
 * 
 * You should return [1, 3, 4].
 * 
 * 
 * Credits:Special thanks to @amrsaqr for adding this problem and creating all
 * test cases.
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    queue<TreeNode*> q;
    vector<int> rightSideView(TreeNode* root) {
        vector<int> v;
        if (root==NULL) return v;
        int n = 1, n1 = 0; q.push(root);
        while (!q.empty()) {
            TreeNode* p = q.front();
            if (p->left!=NULL) { q.push(p->left); ++n1; }
            if (p->right!=NULL) { q.push(p->right); ++n1; }
            q.pop();
            if (--n == 0) {
                v.push_back(p->val);
                n = n1; n1 = 0;
            }
        }
        return v;
    }
};

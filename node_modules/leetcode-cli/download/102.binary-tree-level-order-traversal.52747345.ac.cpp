/*
 * [102] Binary Tree Level Order Traversal
 *
 * https://leetcode.com/problems/binary-tree-level-order-traversal
 *
 * Medium (37.73%)
 * Total Accepted:    155655
 * Total Submissions: 412443
 * Testcase Example:  '[3,9,20,null,null,15,7]'
 *
 * Given a binary tree, return the level order traversal of its nodes' values.
 * (ie, from left to right, level by level).
 * 
 * 
 * For example:
 * Given binary tree [3,9,20,null,null,15,7],
 * 
 * 3
 * / \
 * 9  20
 * /  \
 * 15   7
 * 
 * 
 * 
 * return its level order traversal as:
 * 
 * [
 * [3],
 * [9,20],
 * [15,7]
 * ]
 * 
 * 
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> vv;
        queue<TreeNode*> q;
        TreeNode *p, *last=NULL, *next_last=NULL;
        if (root!=NULL) {
            q.push(root);
            last = root;
            vector<int> v;
            vv.push_back(v);
        }
        while (!q.empty()) {
            p=q.front(); q.pop();
            vv.back().push_back(p->val);
            if (p->left!=NULL) { q.push(p->left); next_last=p->left; }
            if (p->right!=NULL) { q.push(p->right); next_last=p->right; }
            if (p==last) {
                if (next_last!=NULL) {
                    vector<int> v; vv.push_back(v);
                }
                last=next_last; next_last=NULL;
            }
        }
        return vv;
    }
};

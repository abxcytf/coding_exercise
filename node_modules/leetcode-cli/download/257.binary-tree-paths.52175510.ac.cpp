/*
 * [257] Binary Tree Paths
 *
 * https://leetcode.com/problems/binary-tree-paths
 *
 * Easy (36.01%)
 * Total Accepted:    94910
 * Total Submissions: 263527
 * Testcase Example:  '[1,2,3,null,5]'
 *
 * 
 * Given a binary tree, return all root-to-leaf paths.
 * 
 * 
 * For example, given the following binary tree:
 * 
 * 
 * 
 * 1
 * /   \
 * 2     3
 * \
 * 5
 * 
 * 
 * 
 * All root-to-leaf paths are:
 * ["1->2->5", "1->3"]
 * 
 * 
 * Credits:Special thanks to @jianchao.li.fighter for adding this problem and
 * creating all test cases.
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<TreeNode*> path;
    vector<string> results;
    vector<string> binaryTreePaths(TreeNode* root) {
        results.clear();
        path.clear();
        if (root != NULL) DFS(root);
        return results;
    }
    
    void DFS(TreeNode* p) {
        path.push_back(p);
        if (p->left==NULL && p->right == NULL) {
            string x = "";
            for (auto i : path) {
                x += "->" + to_string(i->val);
            }
            results.push_back(x.substr(2));
        } else {
            if (p->left != NULL) DFS(p->left);
            if (p->right != NULL) DFS(p->right);
        }
        path.pop_back();
    }
};

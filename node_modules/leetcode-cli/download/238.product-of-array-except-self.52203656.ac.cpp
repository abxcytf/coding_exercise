/*
 * [238] Product of Array Except Self
 *
 * https://leetcode.com/problems/product-of-array-except-self
 *
 * Medium (47.71%)
 * Total Accepted:    85606
 * Total Submissions: 179404
 * Testcase Example:  '[0,0]'
 *
 * 
 * Given an array of n integers where n > 1, nums, return an array output such
 * that output[i] is equal to the product of all the elements of nums except
 * nums[i].
 * 
 * Solve it without division and in O(n).
 * 
 * For example, given [1,2,3,4], return [24,12,8,6].
 * 
 * Follow up:
 * Could you solve it with constant space complexity? (Note: The output array
 * does not count as extra space for the purpose of space complexity analysis.)
 */
class Solution {
public:
    vector<int> productExceptSelf(vector<int>& nums) {
        int n = nums.size();
        vector<int> l(n), r(n), x(n);
        l[0] = nums[0]; r[n-1] = nums[n-1];
        for (int i=1; i<n; ++i) l[i]=l[i-1]*nums[i];
        for (int i=n-2; i>=0; --i) r[i]=r[i+1]*nums[i];
        x[0]=r[1];x[n-1]=l[n-2];
        for (int i=1; i<n-1; ++i) x[i]=l[i-1]*r[i+1];
        return x;
    }
};

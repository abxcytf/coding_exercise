#
# [45] Jump Game II
#
# https://leetcode.com/problems/jump-game-ii
#
# Hard (26.03%)
# Total Accepted:    85463
# Total Submissions: 328383
# Testcase Example:  '[0]'
#
# 
# Given an array of non-negative integers, you are initially positioned at the
# first index of the array.
# 
# 
# Each element in the array represents your maximum jump length at that
# position. 
# 
# 
# Your goal is to reach the last index in the minimum number of jumps.
# 
# 
# 
# For example:
# Given array A = [2,3,1,1,4]
# 
# 
# The minimum number of jumps to reach the last index is 2. (Jump 1 step from
# index 0 to 1, then 3 steps to the last index.)
# 
# 
# 
# Note:
# You can assume that you can always reach the last index.
#
class Solution:
    # @param A, a list of integers
    # @return an integer
    def jump(self, A):
        n=len(A)
        v=[0]*n
        v[0]=0
        for i in range(n):
            if i>1 and A[i]==A[i-1]-1: continue
            x=v[i]+1
            for j in range(1,A[i]+1):
                if i+j>=n: break
                if v[i+j] == 0 or x < v[i+j]:
                    v[i+j] = x
        return v[-1]

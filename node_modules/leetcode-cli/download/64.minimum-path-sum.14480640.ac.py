#
# [64] Minimum Path Sum
#
# https://leetcode.com/problems/minimum-path-sum
#
# Medium (37.50%)
# Total Accepted:    101711
# Total Submissions: 271189
# Testcase Example:  '[[0]]'
#
# Given a m x n grid filled with non-negative numbers, find a path from top
# left to bottom right which minimizes the sum of all numbers along its path.
# 
# Note: You can only move either down or right at any point in time.
#
class Solution:
    # @param grid, a list of lists of integers
    # @return an integer
    def minPathSum(self, vv):
        m = len(vv)
        if m==0: return 0
        n = len(vv[0])
        if n==0: return 0
        xx=[[0 for j in range(n)] for i in range(m)]
        for i in range(m):
            for j in range(n):
                x = 0
                if i>0 and j>0:
                    x=min(xx[i-1][j],xx[i][j-1])
                elif i>0:
                    x=xx[i-1][j]
                else:
                    x=xx[i][j-1]
                xx[i][j]=x+vv[i][j]
        return xx[m-1][n-1]

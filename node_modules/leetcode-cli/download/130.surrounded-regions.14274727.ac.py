#
# [130] Surrounded Regions
#
# https://leetcode.com/problems/surrounded-regions
#
# Medium (17.74%)
# Total Accepted:    74397
# Total Submissions: 419314
# Testcase Example:  '["XXXX","XOOX","XXOX","XOXX"]'
#
# 
# Given a 2D board containing 'X' and 'O' (the letter O), capture all regions
# surrounded by 'X'.
# 
# A region is captured by flipping all 'O's into 'X's in that surrounded
# region.
# 
# 
# 
# For example,
# 
# X X X X
# X O O X
# X X O X
# X O X X
# 
# 
# 
# 
# After running your function, the board should be:
# 
# X X X X
# X X X X
# X X X X
# X O X X
# 
# 
#
class Solution:
    def solve(self, board):
        vv = [[x for x in v] for v in board]
        n=len(vv)
        if n == 0: return
        m=len(vv[0])
        if m == 0: return
        xx=[]
        for i in range(n):
            for j in range(m):
                if vv[i][j] == 'O':
                    if i == 0 or j == 0 or i == n-1 or j == m-1:
                        xx.append((i,j))
                    else:
                        vv[i][j]='?'
        while len(xx) > 0:
            i,j = xx.pop()
            vv[i][j] = 'O'
            if i<n-1 and vv[i+1][j]=='?':
                xx.append((i+1,j))
            if i>1 and vv[i-1][j]=='?':
                xx.append((i-1,j))
            if j<m-1 and vv[i][j+1]=='?':
                xx.append((i,j+1))
            if j>1 and vv[i][j-1]=='?':
                xx.append((i,j-1))

        for i in range(n):
            for j in range(m):
                if vv[i][j] == '?':
                    vv[i][j] = 'X'
        board[:] = [''.join(v) for v in vv]

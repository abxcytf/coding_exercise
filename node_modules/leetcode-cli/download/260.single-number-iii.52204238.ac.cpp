/*
 * [260] Single Number III
 *
 * https://leetcode.com/problems/single-number-iii
 *
 * Medium (49.88%)
 * Total Accepted:    60057
 * Total Submissions: 120395
 * Testcase Example:  '[1,2,1,3,2,5]'
 *
 * 
 * Given an array of numbers nums, in which exactly two elements appear only
 * once and all the other elements appear exactly twice. Find the two elements
 * that appear only once.
 * 
 * 
 * For example:
 * 
 * 
 * Given nums = [1, 2, 1, 3, 2, 5], return [3, 5].
 * 
 * 
 * Note:
 * 
 * The order of the result is not important. So in the above example, [5, 3] is
 * also correct.
 * Your algorithm should run in linear runtime complexity. Could you implement
 * it using only constant space complexity?
 * 
 * 
 * 
 * Credits:Special thanks to @jianchao.li.fighter for adding this problem and
 * creating all test cases.
 */
class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {
        int x = 0;
        for (auto i:nums) x ^= i;
        while ((x&(x-1)) != 0) x&=(x-1);
        int y=0,z=0;
        for (auto i:nums) {
            if (x & i) y^=i; else z^=i;
        }
        vector<int> v;
        v.push_back(y);
        v.push_back(z);
        return v;
    }
};

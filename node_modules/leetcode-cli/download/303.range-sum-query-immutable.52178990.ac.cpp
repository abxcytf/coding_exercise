/*
 * [303] Range Sum Query - Immutable
 *
 * https://leetcode.com/problems/range-sum-query-immutable
 *
 * Easy (27.19%)
 * Total Accepted:    60322
 * Total Submissions: 221784
 * Testcase Example:  '["NumArray","sumRange","sumRange","sumRange"]\n[[[-2,0,3,-5,2,-1]],[0,2],[2,5],[0,5]]'
 *
 * Given an integer array nums, find the sum of the elements between indices i
 * and j (i &le; j), inclusive.
 * 
 * Example:
 * 
 * Given nums = [-2, 0, 3, -5, 2, -1]
 * 
 * sumRange(0, 2) -> 1
 * sumRange(2, 5) -> -1
 * sumRange(0, 5) -> -3
 * 
 * 
 * 
 * Note:
 * 
 * You may assume that the array does not change.
 * There are many calls to sumRange function.
 * 
 * 
 */
class NumArray {
public:
    vector<int> c;
    vector<int> nums;
    NumArray(vector<int> &nums) {
        this->nums = nums;
        int n = nums.size();
        c.resize(n);
        if (n>0) {
        c[0] = nums[0];
        for (int i=1; i<n; ++i) {
            c[i] = c[i-1]+nums[i];
        }
        }
    }

    int sumRange(int i, int j) {
        return c[j]-c[i]+this->nums[i];
    }
};


// Your NumArray object will be instantiated and called as such:
// NumArray numArray(nums);
// numArray.sumRange(0, 1);
// numArray.sumRange(1, 2);

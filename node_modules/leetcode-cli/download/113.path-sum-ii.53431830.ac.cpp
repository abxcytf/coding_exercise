/*
 * [113] Path Sum II
 *
 * https://leetcode.com/problems/path-sum-ii
 *
 * Medium (32.04%)
 * Total Accepted:    115372
 * Total Submissions: 360039
 * Testcase Example:  '[5,4,8,11,null,13,4,7,2,null,null,5,1]\n22'
 *
 * 
 * Given a binary tree and a sum, find all root-to-leaf paths where each path's
 * sum equals the given sum.
 * 
 * 
 * For example:
 * Given the below binary tree and sum = 22,
 * 
 * 5
 * / \
 * 4   8
 * /   / \
 * 11  13  4
 * /  \    / \
 * 7    2  5   1
 * 
 * 
 * 
 * return
 * 
 * [
 * [5,4,11,2],
 * [5,8,4,5]
 * ]
 * 
 * 
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> pathSum(TreeNode* p, int sum) {
        vector<vector<int>> vv;
        if (p==NULL) return vv;
        if (p->left==NULL && p->right==NULL){
            if (p->val==sum) vv.push_back({sum});
            return vv;
        }
        if (p->left!=NULL) {
            auto vv2 = pathSum(p->left, sum-p->val);
            for (auto &v1 : vv2) {
                vector<int> x = {p->val};
                x.insert(x.end(), v1.begin(), v1.end());
                vv.push_back(x);
            }
        }
        if (p->right!=NULL) {
            auto vv2 = pathSum(p->right, sum-p->val);
            for (auto &v1 : vv2) {
                vector<int> x = {p->val};
                x.insert(x.end(), v1.begin(), v1.end());
                vv.push_back(x);
            }
        }
        return vv;
    }
};

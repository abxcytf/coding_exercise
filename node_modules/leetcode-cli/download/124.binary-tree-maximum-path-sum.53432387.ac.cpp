/*
 * [124] Binary Tree Maximum Path Sum
 *
 * https://leetcode.com/problems/binary-tree-maximum-path-sum
 *
 * Hard (25.29%)
 * Total Accepted:    88371
 * Total Submissions: 349329
 * Testcase Example:  '[1,2,3]'
 *
 * 
 * Given a binary tree, find the maximum path sum.
 * 
 * 
 * For this problem, a path is defined as any sequence of nodes from some
 * starting node to any node in the tree along the parent-child connections.
 * The path must contain at least one node and does not need to go through the
 * root.
 * 
 * 
 * For example:
 * Given the below binary tree,
 * 
 * 1
 * / \
 * 2   3
 * 
 * 
 * 
 * Return 6.
 * 
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int v;
    int maxPathSum(TreeNode* p) {
        this->v = INT_MIN;
        go(p);
        return this->v;
    }
    
    int go(TreeNode *p) {
        if (p==NULL) return 0;
        int x = p->val, y=p->val;
        if (p->left != NULL) {
            int l = go(p->left);
            x = max(x, p->val+l);
            y = max(y, y+l);
        }
        if (p->right != NULL) {
            int r = go(p->right);
            x = max(x, p->val+r);
            y = max(y, y+r);
        }
        if (y>this->v) this->v = y;
        if (x>this->v) this->v = x;
        return x;
    }
};

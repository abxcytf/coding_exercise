/*
 * [242] Valid Anagram
 *
 * https://leetcode.com/problems/valid-anagram
 *
 * Easy (45.27%)
 * Total Accepted:    140357
 * Total Submissions: 309996
 * Testcase Example:  '""\n""'
 *
 * Given two strings s and t, write a function to determine if t is an anagram
 * of s. 
 * 
 * For example,
 * s = "anagram", t = "nagaram", return true.
 * s = "rat", t = "car", return false.
 * 
 * 
 * Note:
 * You may assume the string contains only lowercase alphabets.
 * 
 * Follow up:
 * What if the inputs contain unicode characters? How would you adapt your
 * solution to such case?
 */
class Solution {
public:
    bool isAnagram(string s, string t) {
        int n = s.size(), m = t.size();
        if (n != m) return false;
        
        int c[26] = {0};
        int x;
        for (int i = 0; i < n; ++i) ++c[s[i]-'a'];
        for (int i = 0; i < n; ++i) --c[t[i]-'a'];
        for (int i = 0; i < 26; ++i)
            if (c[i] != 0) return false;
        return true;
    }
};

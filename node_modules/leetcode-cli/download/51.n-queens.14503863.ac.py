#
# [51] N-Queens
#
# https://leetcode.com/problems/n-queens
#
# Hard (29.52%)
# Total Accepted:    72779
# Total Submissions: 246508
# Testcase Example:  '4'
#
# The n-queens puzzle is the problem of placing n queens on an n√ón chessboard
# such that no two queens attack each other.
# 
# 
# 
# Given an integer n, return all distinct solutions to the n-queens puzzle.
# 
# Each solution contains a distinct board configuration of the n-queens'
# placement, where 'Q' and '.' both indicate a queen and an empty space
# respectively.
# 
# For example,
# There exist two distinct solutions to the 4-queens puzzle:
# 
# [
# [".Q..",  // Solution 1
# "...Q",
# "Q...",
# "..Q."],
# 
# ["..Q.",  // Solution 2
# "Q...",
# "...Q",
# ".Q.."]
# ]
# 
#
class Solution:
    # @return a list of lists of string
    def solveNQueens(self, n):
        self.vv=[]
        self.v = [0 for i in range(n)]
        self.find(0,n)
        return self.vv

    def find(self,i,n):
        if i==n:
            v1=['.'*i+'Q'+'.'*(n-i-1) for i in self.v]
            self.vv.append(v1)
            return
        for x in range(n):
            ok=True
            for j in range(i):
                if x == self.v[j]:
                    ok=False
                    break
                if abs(x-self.v[j])==i-j:
                    ok=False
                    break
            if not ok: continue
            self.v[i] = x
            self.find(i+1,n)
        return

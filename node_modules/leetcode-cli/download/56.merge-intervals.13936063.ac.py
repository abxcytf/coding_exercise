#
# [56] Merge Intervals
#
# https://leetcode.com/problems/merge-intervals
#
# Medium (28.86%)
# Total Accepted:    109069
# Total Submissions: 377821
# Testcase Example:  '[]'
#
# Given a collection of intervals, merge all overlapping intervals.
# 
# 
# For example,
# Given [1,3],[2,6],[8,10],[15,18],
# return [1,6],[8,10],[15,18].
# 
#
def IntervalComp(v1,v2):
    return v1.start - v2.start

class Solution:
    def merge(self, vs):
        if len(vs)<=1: return vs
        vs.sort(IntervalComp)
        vs2=[]
        newv = vs[0]
        for v in vs[1:]:
            if v.end < newv.start:
                vs2.append(v)
                continue

            if v.start > newv.end:
                vs2.append(newv)
                newv=v
                continue

            newv.start = min(newv.start,v.start)
            newv.end = max(newv.end,v.end)

        vs2.append(newv)
        return vs2

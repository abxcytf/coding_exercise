/*
 * [151] Reverse Words in a String
 *
 * https://leetcode.com/problems/reverse-words-in-a-string
 *
 * Medium (15.73%)
 * Total Accepted:    144505
 * Total Submissions: 918927
 * Testcase Example:  '""'
 *
 * 
 * Given an input string, reverse the string word by word.
 * 
 * 
 * 
 * For example,
 * Given s = "the sky is blue",
 * return "blue is sky the".
 * 
 * 
 * 
 * Update (2015-02-12):
 * For C programmers: Try to solve it in-place in O(1) space.
 * 
 * 
 * click to show clarification.
 * 
 * Clarification:
 * 
 * 
 * 
 * What constitutes a word?
 * A sequence of non-space characters constitutes a word.
 * Could the input string contain leading or trailing spaces?
 * Yes. However, your reversed string should not contain leading or trailing
 * spaces.
 * How about multiple spaces between two words?
 * Reduce them to a single space in the reversed string.
 * 
 * 
 * 
 */
class Solution {
public:
    void reverseWords(string &s) {
        int sz = s.size();
        int i = 0, b, e;
        string s1;
        while (i < sz) {
            while (s[i] == ' ' && i < sz) ++i;
            s1.append(1,' ');
            b = i;
            while (s[i] != ' ' && s[i] != '\0') ++i;
            e = i-1;
            //cout << b << "," << e << endl;
            while (b<=e) {
                s1.append(1,s[e]);
                --e;
            }
        }
        b = 0; e = s1.size()-1;
        while (b<e) {
            char tmp = s1[b]; s1[b] = s1[e]; s1[e] = tmp;
            ++b;--e;
        }
        if (s1[0] == ' ') s1.erase(0,1);
        if (s1[s1.size()-1] == ' ') s1.erase(s1.size()-1);
        s=s1;
        return;
    }
};
